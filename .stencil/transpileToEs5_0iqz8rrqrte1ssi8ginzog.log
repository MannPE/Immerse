/*! Built with http://stenciljs.com */
App.loadBundle('/**:bundle-id:**/', ['exports'], function (exports) {
    var h = window.App.h;
    /**
     * @export
     * @class TranslateWord
     * Class representing the element that will be injected into webpages for translated words.
     * @property {string} value - The word that is being replaced
     * @property {string} translation - The word that will replace the old one.
     * @property {string} lang - 2 letter shortened language. IE: ES, EN, DE
     * @property {string} type - The type of word. IE: noun, verb, adverb, etc.
     * @property {boolean} singular - Indicates if the word is for singular or plural
     */
    var ExtensionWrap = /** @class */ (function () {
        function ExtensionWrap() {
        }
        ExtensionWrap.prototype.render = function () {
            return (h("div", null, h("span", { class: this.type + " word " + (this.singular ? "singular" : "plural") }, this.value), h("input", { type: "text", value: this.translation }), h("a", { class: "svg-button", rel: "noopener", title: "Remove this word from the immerse list" }, h("app-icon", { name: "trash" }))));
        };
        Object.defineProperty(ExtensionWrap, "is", {
            get: function () { return "imr-ext-wrp"; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ExtensionWrap, "properties", {
            get: function () {
                return {
                    "lang": {
                        "type": String,
                        "attr": "lang"
                    },
                    "singular": {
                        "type": Boolean,
                        "attr": "singular"
                    },
                    "translation": {
                        "type": String,
                        "attr": "translation"
                    },
                    "type": {
                        "type": String,
                        "attr": "type"
                    },
                    "value": {
                        "type": String,
                        "attr": "value"
                    }
                };
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ExtensionWrap, "style", {
            get: function () { return "/**style-placeholder:imr-ext-wrp:**/"; },
            enumerable: true,
            configurable: true
        });
        return ExtensionWrap;
    }());
    exports.ImrExtWrp = ExtensionWrap;
    Object.defineProperty(exports, '__esModule', { value: true });
});
