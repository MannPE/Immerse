{"moduleFile":{"sourceFilePath":"C:/Users/manuel.puentes/Documents/Manuel-Personal/Immerse/src/components/word-item/word-item.tsx","localImports":[],"externalImports":["@stencil/core"],"potentialCmpRefs":[],"cmpMeta":{"tagNameMeta":"imr-word-item","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"C:/Users/manuel.puentes/Documents/Manuel-Personal/Immerse/src/components/word-item/word-item.scss","cmpRelativePath":"word-item.scss","originalComponentPath":"word-item.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"WordItem","documentation":"","type":"typeof WordItem"},"encapsulationMeta":0,"componentClass":"WordItem","membersMeta":{"value":{"memberType":1,"attribName":"value","attribType":{"text":"string","typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"value","documentation":"","type":"string"}},"translation":{"memberType":1,"attribName":"translation","attribType":{"text":"string","typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"translation","documentation":"","type":"string"}},"type":{"memberType":1,"attribName":"type","attribType":{"text":"string","typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"type","documentation":"","type":"string"}},"singular":{"memberType":1,"attribName":"singular","attribType":{"text":"boolean","typeReferences":{}},"reflectToAttrib":false,"propType":3,"jsdoc":{"name":"singular","documentation":"","type":"boolean"}},"insensitive":{"memberType":1,"attribName":"insensitive","attribType":{"text":"boolean","typeReferences":{}},"reflectToAttrib":false,"propType":3,"jsdoc":{"name":"insensitive","documentation":"","type":"boolean"}},"ignoreWhiteSpace":{"memberType":1,"attribName":"ignore-white-space","attribType":{"text":"boolean","typeReferences":{}},"reflectToAttrib":false,"propType":3,"jsdoc":{"name":"ignoreWhiteSpace","documentation":"","type":"boolean"}}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"C:/Users/manuel.puentes/Documents/Manuel-Personal/Immerse/src/components/word-item/word-item.js"},"jsText":"/**\r\n * @export\r\n * @class TranslateWord\r\n * Class representing the element that will be injected into webpages for translated words.\r\n * @property {string} value - The word that is being replaced\r\n * @property {string} translation - The word that will replace the old one.\r\n * @property {string} lang - 2 letter shortened language. IE: ES, EN, DE\r\n * @property {string} type - The type of word. IE: noun, verb, adverb, etc.\r\n * @property {boolean} singular - Indicates if the word is for singular or plural\r\n */\r\nexport class WordItem {\r\n    render() {\r\n        return [\r\n            h(\"span\", { class: `${this.type} ${(this.singular ? \"singular\" : \"plural\")}` }, this.value),\r\n            h(\"input\", { type: \"text\", value: this.translation }),\r\n            h(\"i\", { class: \"fas fa-trash-alt\" })\r\n        ];\r\n    }\r\n    static get is() { return \"imr-word-item\"; }\r\n    static get properties() { return {\r\n        \"ignoreWhiteSpace\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"ignore-white-space\"\r\n        },\r\n        \"insensitive\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"insensitive\"\r\n        },\r\n        \"singular\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"singular\"\r\n        },\r\n        \"translation\": {\r\n            \"type\": String,\r\n            \"attr\": \"translation\"\r\n        },\r\n        \"type\": {\r\n            \"type\": String,\r\n            \"attr\": \"type\"\r\n        },\r\n        \"value\": {\r\n            \"type\": String,\r\n            \"attr\": \"value\"\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:imr-word-item:**/\"; }\r\n}\r\n"}