/*! Built with http://stenciljs.com */
import { h } from './app.core.js';
/**
 *
 *
 * @export
 * @class TranslateFlagList
 * Element consisting of a list of language cards for choosing the current language.
 * @property {any} languages - The structure for this param is an array of custom objects with
 * the following propertis:
 * @property {string} name -The  simple language 2 letter name. IE: KR, DE, ES, etc.
 * @property {string} imgPath - path from src to the flag image.
 * @property {string} alt -The name of the language represented by the flag in case it doesn't load.
 *
 */
var FlagList = /** @class */ (function () {
    function FlagList() {
        this.languages = [
            {
                name: 'KR',
                imgPath: '/assets/img/flags/korean.png',
                alt: 'Hangeul_KR',
            },
            {
                name: 'DE',
                imgPath: '/assets/img/flags/german.png',
                alt: 'Deutsch_DE',
            },
            {
                name: 'FR',
                imgPath: '/assets/img/flags/french.png',
                alt: 'French_FR',
            },
            {
                name: 'ES',
                imgPath: '/assets/img/flags/spanish.png',
                alt: 'Spanish_MX',
            }
        ];
    }
    FlagList.prototype.render = function () {
        return (h("div", { class: "language-card-list" }, this.languages.map(function (demo) { return h("language-card", { name: demo.name, imgPath: demo.imgPath, alt: demo.alt }); })));
    };
    Object.defineProperty(FlagList, "is", {
        get: function () { return "imr-flag-list"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlagList, "style", {
        get: function () { return "/**style-placeholder:imr-flag-list:**/"; },
        enumerable: true,
        configurable: true
    });
    return FlagList;
}());
/**
 *
 * @export
 * @class TranslateInput
 * Represents a custom input that includes a title and placeholder.
 * @property {string} word - the value inside of the input.
 * @property {string} description - This will be the title of such input.
 * @property {string} example - The placeholder inside of the input.
 */
var Input = /** @class */ (function () {
    function Input() {
    }
    Input.prototype.render = function () {
        return (h("div", null, h("div", { class: "translate-input" }, h("h4", null, this.description), h("input", { type: "text", value: this.word, placeholder: this.example }))));
    };
    Object.defineProperty(Input, "is", {
        get: function () { return "imr-input"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Input, "properties", {
        get: function () {
            return {
                "description": {
                    "type": String,
                    "attr": "description"
                },
                "example": {
                    "type": String,
                    "attr": "example"
                },
                "word": {
                    "type": String,
                    "attr": "word"
                }
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Input, "style", {
        get: function () { return "/**style-placeholder:imr-input:**/"; },
        enumerable: true,
        configurable: true
    });
    return Input;
}());
var MainPage = /** @class */ (function () {
    function MainPage() {
        document.title = "Stencil";
    }
    MainPage.prototype.componentDidLoad = function () {
        console.log('didLoad called on landing page');
        // unfortunately necessary hack because Edge
        // dont show the animated youtube video in Edge because
        // pointer-events: none; is broken in Edge
        // just link to the youtube video directly like we do on mobile
        if (document.documentMode || /Edge/.test(navigator.userAgent)) {
            this.el.querySelector('#youtube-video').style.display = 'none';
            this.el.querySelector('#launch-video').style.display = 'none';
            this.el.querySelector('#background').style.display = 'none';
            this.el.querySelector('#mobile-video').style.display = 'flex';
        }
    };
    MainPage.prototype.openYoutube = function () {
        var youtube = this.el.querySelector('#youtube-video');
        var background = this.el.querySelector('#background');
        youtube.classList.add('youtube-show');
        background.classList.add('background-show');
    };
    MainPage.prototype.closeBackground = function () {
        var youtube = this.el.querySelector('#youtube-video');
        var background = this.el.querySelector('#background');
        youtube.classList.remove('youtube-show');
        background.classList.remove('background-show');
    };
    MainPage.prototype.render = function () {
        var _this = this;
        return (h("div", null, h("div", { onClick: function () { _this.closeBackground(); }, id: "background" }), !this.isServer && window.matchMedia('(min-width: 740px)').matches ? h("div", { id: "youtube-video", onClick: function () { _this.closeBackground(); } }, h("lazy-iframe", { src: "https://www.youtube.com/embed/UfD-k7aHkQE", width: "700", height: "450", title: "Ionic team at Polymer Summit video" })) : null, h("main", null, h("imr-flag-list", null), h("h2", null, "Immerse"), h("imr-input", { description: "Old word", example: "cat" }), h("imr-input", { description: "New word", example: "Katze" }), h("button", { id: "add-button" }, "Add"))));
    };
    Object.defineProperty(MainPage, "is", {
        get: function () { return "main-page"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MainPage, "properties", {
        get: function () {
            return {
                "el": {
                    "elementRef": true
                },
                "isServer": {
                    "context": "isServer"
                }
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MainPage, "style", {
        get: function () { return "/**style-placeholder:main-page:**/"; },
        enumerable: true,
        configurable: true
    });
    return MainPage;
}());
export { FlagList as ImrFlagList, Input as ImrInput, MainPage };
