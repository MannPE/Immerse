{"moduleFile":{"sourceFilePath":"C:/Users/Zirael/Documents/Extensions/Immerse/src/components/lazy-iframe/lazy-iframe.tsx","localImports":[],"externalImports":["@stencil/core"],"potentialCmpRefs":[],"cmpMeta":{"tagNameMeta":"lazy-iframe","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"C:/Users/Zirael/Documents/Extensions/Immerse/src/components/lazy-iframe/lazy-iframe.scss","cmpRelativePath":"lazy-iframe.scss","originalComponentPath":"lazy-iframe.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"LazyIframe","documentation":"","type":"typeof LazyIframe"},"encapsulationMeta":0,"componentClass":"LazyIframe","membersMeta":{"el":{"memberType":7},"realSrc":{"memberType":5},"src":{"memberType":1,"attribName":"src","attribType":{"text":"string","typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"src","documentation":"","type":"string"}},"name":{"memberType":1,"attribName":"name","attribType":{"text":"string","typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"name","documentation":"","type":"string"}},"frameBorder":{"memberType":1,"attribName":"frame-border","attribType":{"text":"string","typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"frameBorder","documentation":"","type":"string"}},"scrolling":{"memberType":1,"attribName":"scrolling","attribType":{"text":"string","typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"scrolling","documentation":"","type":"string"}},"width":{"memberType":1,"attribName":"width","attribType":{"text":"string","typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"width","documentation":"","type":"string"}},"height":{"memberType":1,"attribName":"height","attribType":{"text":"string","typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"height","documentation":"","type":"string"}}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"C:/Users/Zirael/Documents/Extensions/Immerse/src/components/lazy-iframe/lazy-iframe.js"},"jsText":"export class LazyIframe {\r\n    componentDidLoad() {\r\n        if ('IntersectionObserver' in window) {\r\n            this.io = new IntersectionObserver((data) => {\r\n                if (data[0].isIntersecting) {\r\n                    this.handleIframe();\r\n                    this.cleanup();\r\n                }\r\n            });\r\n            this.io.observe(this.el.querySelector('iframe'));\r\n        }\r\n        else {\r\n            this.handleIframe();\r\n        }\r\n    }\r\n    componentDidUnload() {\r\n        this.cleanup();\r\n    }\r\n    handleIframe() {\r\n        this.realSrc = this.src;\r\n    }\r\n    cleanup() {\r\n        // always make sure we remove the intersection\r\n        // observer when its served its purpose so we dont\r\n        // eat cpu cycles unnecessarily\r\n        if (this.io) {\r\n            this.io.disconnect();\r\n            this.io = null;\r\n        }\r\n    }\r\n    render() {\r\n        return (h(\"div\", null,\r\n            h(\"iframe\", { frameBorder: \"0\", title: this.name, allowFullScreen: true, src: this.realSrc, frameborder: this.frameBorder, scrolling: this.scrolling, width: this.width, height: this.height })));\r\n    }\r\n    static get is() { return \"lazy-iframe\"; }\r\n    static get properties() { return {\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"frameBorder\": {\r\n            \"type\": String,\r\n            \"attr\": \"frame-border\"\r\n        },\r\n        \"height\": {\r\n            \"type\": String,\r\n            \"attr\": \"height\"\r\n        },\r\n        \"name\": {\r\n            \"type\": String,\r\n            \"attr\": \"name\"\r\n        },\r\n        \"realSrc\": {\r\n            \"state\": true\r\n        },\r\n        \"scrolling\": {\r\n            \"type\": String,\r\n            \"attr\": \"scrolling\"\r\n        },\r\n        \"src\": {\r\n            \"type\": String,\r\n            \"attr\": \"src\"\r\n        },\r\n        \"width\": {\r\n            \"type\": String,\r\n            \"attr\": \"width\"\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:lazy-iframe:**/\"; }\r\n}\r\n"}