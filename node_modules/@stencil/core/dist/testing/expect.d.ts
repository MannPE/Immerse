declare global {
    namespace jest {
        interface Matchers<R> {
            toEqualHtml(html: string): void;
            toHaveClasses(classlist: string[]): void;
            toMatchClasses(classlist: string[]): void;
            toHaveAttributes(attributes: {
                [attr: string]: string;
            }): void;
            toMatchAttributes(attributes: {
                [attr: string]: string;
            }): void;
            toHaveProperties(properties: {
                [prop: string]: any;
            }): void;
        }
    }
}
export declare function toEqualHtml(a: string, b: string): {
    message: () => string;
    pass: boolean;
};
export declare function toHaveClasses(element: HTMLElement, classlist: string[]): {
    message: () => any;
    pass: boolean;
};
export declare function toMatchClasses(element: HTMLElement, classlist: string[]): {
    message: () => any;
    pass: boolean;
};
export declare function toHaveAttributes(element: HTMLElement, attributes: {
    [attr: string]: string;
}): {
    message: () => any;
    pass: boolean;
};
export declare function toMatchAttributes(element: HTMLElement, attributes: {
    [attr: string]: string;
}): {
    message: () => any;
    pass: boolean;
};
export declare function toHaveProperties(instance: any, properties: {
    [prop: string]: any;
}): {
    message: () => any;
    pass: boolean;
};
