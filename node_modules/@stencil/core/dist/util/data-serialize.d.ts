import * as d from '../declarations';
import { ENCAPSULATION } from './constants';
export declare function formatBrowserLoaderComponentRegistry(cmpRegistry: d.ComponentRegistry): d.ComponentHostData[];
export declare function formatBrowserLoaderComponent(cmpMeta: d.ComponentMeta): d.ComponentHostData;
export declare function formatEsmLoaderComponent(config: d.Config, cmpMeta: d.ComponentMeta): Promise<string>;
export declare function formatBrowserLoaderBundleIds(bundleIds: string | d.BundleIds): any;
export declare function formatEsmLoaderImportFns(config: d.Config, cmpMeta: d.ComponentMeta): Promise<string>;
export declare function formatHasStyles(stylesMeta: d.StylesMeta): 0 | 1;
export declare function formatConstructorEncapsulation(encapsulation: ENCAPSULATION): "shadow" | "scoped";
export declare function formatComponentConstructorProperties(membersMeta: d.MembersMeta, stringify?: boolean, excludeInternal?: boolean): string | d.ComponentConstructorProperties;
export declare function formatComponentConstructorEvents(eventsMeta: d.EventMeta[]): d.ComponentConstructorEvent[];
export declare function formatComponentConstructorEvent(eventMeta: d.EventMeta): d.ComponentConstructorEvent;
export declare function formatComponentConstructorListeners(listenersMeta: d.ListenMeta[], stringify?: boolean): string | d.ComponentConstructorListener[];
export declare function formatComponentConstructorListener(listenMeta: d.ListenMeta): d.ComponentConstructorListener;
export declare function getJsPathBundlePlaceholder(tagName: string): string;
export declare function getStylePlaceholder(tagName: string): string;
export declare function getStyleIdPlaceholder(tagName: string): string;
export declare function getBundleIdPlaceholder(): string;
export declare function replaceBundleIdPlaceholder(jsText: string, bundleId: string): string;
