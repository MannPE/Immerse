var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
const PrivateRoute = (_a) => {
    var { component } = _a, props = __rest(_a, ["component"]);
    return (h("stencil-route", Object.assign({}, props, { routeRender: (props) => {
            if (window.userAuthenticated) {
                const Component = component;
                return h(Component, Object.assign({}, props, props.componentProps));
            }
            return h("stencil-router-redirect", { url: "/" });
        } })));
};
export class TestApp {
    render() {
        return (h("stencil-router", { "title-suffix": " - Stencil Router Demos" },
            h("ul", null,
                h("li", null,
                    h("stencil-route-link", { url: "/", exact: true }, "Exact Base Link")),
                h("li", null,
                    h("stencil-route-link", { url: "/" }, "Base Link")),
                h("li", null,
                    h("stencil-route-link", { url: "/demo", urlMatch: ['/demo', '/demox'], exact: true }, "Demo Link")),
                h("li", null,
                    h("stencil-route-link", { url: "/demo2" }, "Demo2 Link")),
                h("li", null,
                    h("stencil-route-link", { url: "/demo3" }, "Demo3 Link")),
                h("li", null,
                    h("stencil-route-link", { url: "/demo3/page1" }, "Demo3 Page1 Link")),
                h("li", null,
                    h("stencil-route-link", { url: "/demo3/page2" }, "Demo3 Page2 Link")),
                h("li", null,
                    h("stencil-route-link", { url: "/demo4" }, "Demo4 Link")),
                h("li", null,
                    h("stencil-route-link", { anchorClass: "what", url: "/demo6/" }, "Demo6 Link")),
                h("li", null,
                    h("stencil-route-link", { anchorTabIndex: "1", url: "/demo7/" }, "Demo7 Link")),
                h("stencil-route-link", { custom: "li", url: "/demo8/" }, "Demo8 Link")),
            h("stencil-route-switch", null,
                h("stencil-route", { url: "/", exact: true, routeRender: (props) => {
                        props;
                        return h("span", null, "rendering /");
                    } }),
                h("stencil-route", { url: ['/demo', '/demox'], routeRender: (props) => {
                        props;
                        return (h("div", null,
                            h("stencil-route-title", { title: "DEMO" }),
                            h("span", null, "rendering /demo"),
                            h("li", null,
                                h("stencil-route-link", { url: "/demo3" }, "Demo3 Link"))));
                    } }),
                h("stencil-route", { url: "/demo2", routeRender: (props) => {
                        props;
                        return [
                            h("span", null, "rendering /demo2"),
                            h("stencil-router-redirect", { url: "/demo3" })
                        ];
                    } }),
                h("stencil-route", { url: "/demo3", component: "test-demo-three" }),
                h("stencil-route", { url: "/demo4", component: "test-demo-four" }),
                h("stencil-route", { url: "/demo5", component: "async-content", componentProps: { location: '/' } }),
                h("stencil-route", { url: "/demo6", component: "test-demo-six" }),
                h(PrivateRoute, { url: "/demo7", component: "test-demo-six", componentProps: { testing: true } }),
                h("stencil-route", { url: "/demo8", routeRender: (props) => {
                        props;
                        return [
                            h("stencil-route-title", { title: "Demo 8" }),
                            h("span", null, "rendering /demo 8")
                        ];
                    } }),
                h("stencil-route", { routeRender: () => {
                        return h("span", null, "The route is not found");
                    } }))));
    }
    static get is() { return "test-app"; }
}
