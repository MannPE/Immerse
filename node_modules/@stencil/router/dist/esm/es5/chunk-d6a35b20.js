/*! Built with http://stenciljs.com */
import { h } from "./stencilrouter.core.js";
var __rest = function (e, r) { var t = {}; for (var n in e)
    Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]); if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
    var o = 0;
    for (n = Object.getOwnPropertySymbols(e); o < n.length; o++)
        r.indexOf(n[o]) < 0 && (t[n[o]] = e[n[o]]);
} return t; };
function defaultConsumerRender(e, r) { return h("context-consumer", { subscribe: e, renderer: r }); }
function createProviderConsumer(e, r) {
    if (r === void 0) { r = defaultConsumerRender; }
    var t = new Map, n = e;
    function o(e, r) { Array.isArray(e) ? e.slice().forEach(function (e) { r[e] = n[e]; }) : r[e] = Object.assign({}, n), r.forceUpdate(); }
    function i(e) { return function (r) { t.has(r) || (t.set(r, e), o(e, r)); }; }
    function c(e, r) { return i(r)(e), function () { t.delete(e); }; }
    return { Provider: function (_a) {
            var e = _a.state, r = _a.children;
            return n = e, t.forEach(o), r;
        }, Consumer: function (_a) {
            var e = _a.children;
            return r(c, e[0]);
        }, wrapConsumer: function (e, r) { var t = e.is; return function (e) { var n = e.children, o = __rest(e, ["children"]); return h(t, Object.assign({ ref: i(r) }, o), n); }; }, injectProps: function (e, r) { var t = null; var n = Object.keys(e.properties).find(function (r) { return 1 == e.properties[r].elementRef; }); if (void 0 == n)
            throw new Error("Please ensure that your Component " + e.is + " has an attribtue with \"@Element\" decorator. " + "This is required to be able to inject properties."); var o = e.prototype.componentWillLoad; e.prototype.componentWillLoad = function () { if (t = c(this[n], r), o)
            return o.bind(this)(); }; var i = e.prototype.componentDidUnload; e.prototype.componentDidUnload = function () { if (t(), i)
            return i.bind(this)(); }; } };
}
var ActiveRouter = createProviderConsumer({ historyType: "browser", location: null, titleSuffix: "", root: "/", history: null, routeViewsUpdated: function () { } });
export { ActiveRouter as a };
